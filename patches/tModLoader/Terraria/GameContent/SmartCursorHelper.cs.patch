--- src/TerrariaNetCore/Terraria/GameContent/SmartCursorHelper.cs
+++ src/tModLoader/Terraria/GameContent/SmartCursorHelper.cs
@@ -5,6 +_,7 @@
 using Terraria.GameContent.UI;
 using Terraria.GameInput;
 using Terraria.ID;
+using Terraria.ModLoader;
 
 namespace Terraria.GameContent
 {
@@ -143,57 +_,60 @@
 			bool result = false;
 			if (Main.tile[providedInfo.screenTargetX, providedInfo.screenTargetY].active()) {
 				switch (Main.tile[providedInfo.screenTargetX, providedInfo.screenTargetY].type) {
+					/*
 					case 4:
 					case 10:
 					case 11:
 					case 13:
 					case 21:
 					case 29:
 					case 33:
 					case 49:
 					case 50:
 					case 55:
 					case 79:
 					case 85:
 					case 88:
 					case 97:
 					case 104:
 					case 125:
 					case 132:
 					case 136:
 					case 139:
 					case 144:
 					case 174:
 					case 207:
 					case 209:
 					case 212:
 					case 216:
 					case 219:
 					case 237:
 					case 287:
 					case 334:
 					case 335:
 					case 338:
 					case 354:
 					case 386:
 					case 387:
 					case 388:
 					case 389:
 					case 411:
 					case 425:
 					case 441:
 					case 463:
 					case 464:
 					case 467:
 					case 468:
 					case 491:
 					case 494:
 					case 510:
 					case 511:
 					case 573:
 					case 621:
 					case 642:
-						result = true;
+					*/		
+					default:
+						result = TileID.Sets.DisableSmartCursor[Main.tile[providedInfo.screenTargetX, providedInfo.screenTargetY].type];
 						break;
 					case 314:
 						if (providedInfo.player.gravDir == 1f)
@@ -1567,11 +_,13 @@
 					if ((tile.active() && !Main.tileCut[tile.type] && !TileID.Sets.BreakableWhenPlacing[tile.type]) || (tile2.active() && !Main.tileCut[tile2.type] && !TileID.Sets.BreakableWhenPlacing[tile2.type]) || (tile4.active() && TileID.Sets.CommonSapling[tile4.type]) || (tile5.active() && TileID.Sets.CommonSapling[tile5.type]) || (tile6.active() && TileID.Sets.CommonSapling[tile6.type]) || (tile7.active() && TileID.Sets.CommonSapling[tile7.type]) || (tile8.active() && TileID.Sets.CommonSapling[tile8.type]) || (tile9.active() && TileID.Sets.CommonSapling[tile9.type]) || !tile3.active() || !WorldGen.SolidTile2(tile3))
 						continue;
 
+					bool tileTypeValid = false;
+
 					switch (tile3.type) {
 						case 60:
 							if (WorldGen.EmptyTileCheck(i - 2, i + 2, j - 20, j, 20))
 								_targets.Add(new Tuple<int, int>(i, j));
-							break;
+							continue;
 						case 2:
 						case 23:
 						case 53:
@@ -1586,19 +_,31 @@
 						case 633:
 						case 661:
 						case 662:
-							if (tile4.liquid == 0 && tile.liquid == 0 && tile5.liquid == 0 && WorldGen.EmptyTileCheck(i - 2, i + 2, j - 20, j, 20))
-								_targets.Add(new Tuple<int, int>(i, j));
+							tileTypeValid = true;
 							break;
 					}
+
+					if (!tileTypeValid)
+						tileTypeValid = TileLoader.CanGrowModTree(tile3.type) || TileLoader.CanGrowModPalmTree(tile3.type);
+
+					if (tileTypeValid && tile4.liquid == 0 && tile.liquid == 0 && tile5.liquid == 0 && WorldGen.EmptyTileCheck(i - 2, i + 2, j - 20, j, 20))
+						_targets.Add(new Tuple<int, int>(i, j));
+
 				}
 			}
 
 			_toRemove.Clear();
 			for (int k = 0; k < _targets.Count; k++) {
 				bool flag = false;
+
 				for (int l = -1; l < 2; l += 2) {
 					Tile tile10 = Main.tile[_targets[k].Item1 + l, _targets[k].Item2 + 1];
 					if (tile10.active()) {
+						if (TileLoader.CanGrowModTree(tile10.type) || TileLoader.CanGrowModPalmTree(tile10.type)) {
+							flag = true;
+							continue;
+						}
+						
 						switch (tile10.type) {
 							case 2:
 							case 23:
@@ -2171,7 +_,7 @@
 			int reachableEndY = providedInfo.reachableEndY;
 			_ = providedInfo.screenTargetX;
 			_ = providedInfo.screenTargetY;
-			if (providedInfo.item.createTile != 4 || fX != -1 || fY != -1)
+			if (providedInfo.item.createTile < 0 || !TileID.Sets.Torch[providedInfo.item.createTile] || fX != -1 || fY != -1)
 				return;
 
 			_targets.Clear();
